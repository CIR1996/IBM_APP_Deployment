name: Deploy to IBM Cloud

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3 to support Node.js 20

      - name: Set up IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh

      - name: Log in to IBM Cloud
        env:
          IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
        run: |
          ibmcloud login --apikey $IBM_CLOUD_API_KEY -r ${{ secrets.IBM_CLOUD_REGION }}

      - name: Set target resource group
        run: |
          ibmcloud target -g ${{ secrets.IBM_CLOUD_RESOURCE_GROUP }}

      - name: Docker Hub Login with Debug
        env:
            DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
            DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
            echo "Docker Hub Username: $DOCKER_HUB_USERNAME"
            for i in {1..5}; do \
                echo "Attempt $i: Logging into Docker Hub..." && \
                echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin && break || \
                echo "Docker login failed, retrying in 10 seconds... ($i/5)" && sleep 10; \
            done
      - name: Build Docker image with Retry
        run: |
          for i in {1..5}; do \
            docker build -t hello-world-app . && break || \
            echo "Docker build failed, retrying in 10 seconds... ($i/5)" && sleep 10; \
          done

      - name: Tag Docker image
        run: |
          docker tag hello-world-app ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world-app

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world-app

      - name: Install IBM Cloud Code Engine plugin
        run: |
          ibmcloud plugin install code-engine -f

      - name: Select or create Code Engine project
        run: |
          ibmcloud ce project select --name hello-world-project || \
          ibmcloud ce project create --name hello-world-project

      - name: Create or update application
        run: |
          if ibmcloud ce application get --name hello-world-app; then \
            ibmcloud ce application update --name hello-world-app --image ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world-app --port 8080; \
          else \
            ibmcloud ce application create --name hello-world-app --image ${{ secrets.DOCKER_HUB_USERNAME }}/hello-world-app --port 8080; \
          fi

      - name: Wait for application to become ready
        run: |
          echo "Waiting for application 'hello-world-app' to become ready..."
          for i in {1..30}; do \
            if ibmcloud ce application get --name hello-world-app --output json | jq -e '.status.conditions[0].type == "Ready" and .status.conditions[0].status == "True"'; then \
              echo "Application is ready."; \
              break; \
            else \
              echo "Waiting for application to be ready... (attempt $i)"; \
              sleep 20; \
            fi; \
          done
          if ! ibmcloud ce application get --name hello-world-app --output json | jq -e '.status.conditions[0].type == "Ready" and .status.conditions[0].status == "True"'; then \
            echo "Application did not become ready in time."; \
            exit 1; \
          fi

      - name: Get application URL
        run: |
          ibmcloud ce application get --name hello-world-app --output url
